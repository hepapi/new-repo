alertmanager:
  config:
    global:
      resolve_timeout: 2m
    receivers:
    - name: "null"
    - name: teams-prometheus
      webhook_configs:
      - send_resolved: true
        url: http://prometheus-msteams:2000/teams-prometheus
    route:
      group_by:
      - alertname
      group_interval: 5m
      group_wait: 1m
      receiver: "null"
      repeat_interval: 1h
      routes:
      - continue: true
        matchers:
        - severity =~ "critical|warning"
        receiver: teams-prometheus
  enabled: true
  ingress:
    annotations:
      kubernetes.io/ingress.class: nginx
    enabled: true
    hosts:
    - ""
crds:
  enabled: true
defaultRules:
  create: true
  rules:
    alertmanager: false
    configReloaders: true
    etcd: false
    general: true
    k8sContainerCpuUsageSecondsTotal: true
    k8sContainerMemoryCache: true
    k8sContainerMemoryRss: true
    k8sContainerMemorySwap: true
    k8sContainerMemoryWorkingSetBytes: true
    k8sContainerResource: true
    k8sPodOwner: true
    kubeApiserverAvailability: false
    kubeApiserverBurnrate: false
    kubeApiserverHistogram: false
    kubeApiserverSlos: false
    kubeControllerManager: false
    kubePrometheusGeneral: false
    kubePrometheusNodeRecording: false
    kubeProxy: false
    kubeSchedulerAlerting: false
    kubeSchedulerRecording: false
    kubeStateMetrics: false
    kubelet: false
    kubernetesApps: true
    kubernetesResources: true
    kubernetesStorage: true
    kubernetesSystem: true
    network: false
    node: true
    nodeExporterAlerting: true
    nodeExporterRecording: true
    prometheus: false
    prometheusOperator: false
    windows: false
grafana:
  adminPassword: ""
  datasources:
    datasources.yaml:
      apiVersion: 1
  defaultDashboardsEditable: true
  defaultDashboardsTimezone: Europe/Istanbul
  enabled: true
  ingress:
    annotations:
      kubernetes.io/ingress.class: nginx
    enabled: true
    hosts:
    - ""
    path: /
  persistence:
    accessModes:
    - ReadWriteOnce
    enabled: true
    size: 1Gi
    type: pvc
prometheus:
  enabled: true
  ingress:
    annotations:
      kubernetes.io/ingress.class: nginx
    enabled: true
    hosts:
    - ""
  prometheusSpec:
    retention: 90d
    retentionSize: 140GB
    storageSpec:
      volumeClaimTemplate:
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: 150Gi
